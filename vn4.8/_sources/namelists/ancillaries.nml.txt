``ancillaries.nml``
===================


This file sets up spatially varying ancillary values. It contains eight namelists - :nml:lst:`JULES_FRAC`, :nml:lst:`JULES_SOIL_PROPS`, :nml:lst:`JULES_TOP`, :nml:lst:`JULES_AGRIC`, :nml:lst:`JULES_CROP_PROPS`, :nml:lst:`JULES_IRRIG` and :nml:lst:`JULES_RIVERS_PROPS`, :nml:lst:`JULES_CO2`.

Data associated with each of these namelists can optionally be read from the dump file (if present) by setting ``read_from_dump`` to true. This functionality provides closer alignment with UM functionality and can help ensure that the correct ancillary data remain associated with the model state.

``JULES_FRAC`` namelist members
-------------------------------

.. nml:namelist:: JULES_FRAC

This namelist specifies the fraction of the land area in each gridbox that is covered by each of the surface types. If :nml:mem:`JULES_VEGETATION::l_veg_compete` = TRUE, then the fraction of each surface type is modelled and the initial state should be specified in :nml:lst:`JULES_INITIAL`. In all other cases, it must be read here.

Note that all land points must be either soil points (indicated by values > 0 of the saturated soil moisture content), or land ice points (indicated by the fractional coverage of the ice surface type - if used - being one). The fractional cover of the ice surface type in each gridbox must be either zero or one - there cannot be partial coverage of ice within a gridbox.

If using either URBAN-2T or MORUSES then the total urban fraction should be entered in the :nml:mem:`JULES_SURFACE_TYPES::urban_canyon` or :nml:mem:`JULES_SURFACE_TYPES::urban` tile, whichever is specified. This is partitioned into canyon and roof fractions using the canyon fraction (W/R). The canyon fraction is set in :doc:`urban.nml` and can either be prescribed by the user or calculated by an empirical formula.

.. nml:member:: read_from_dump

   :type: logical
   :default: F

   TRUE
      Populate variables associated with this namelist from the dump file. All other namelist members are ignored.

   FALSE
      Use the other namelist members to determine how to populate variables.


.. nml:member:: file

   :type: character
   :default: None

   The name of the file to read surface type fractional coverage data from.


.. nml:member:: frac_name

   :type: character
   :default: 'frac' (empty string)

   The name of the variable containing the surface type fractional coverage data.

   .. note::
       This is only used for NetCDF files.
       For ASCII files, the surface type fractional coverage data is expected to be the first (ideally only) variable in the file.

   In the file, the variable must have a single levels dimension of size ``ntype`` called :nml:mem:`JULES_INPUT_GRID::type_dim_name`, and should not have a time dimension.



``JULES_SOIL_PROPS`` namelist members
-------------------------------------

.. nml:namelist:: JULES_SOIL_PROPS

This namelist specifies how spatially varying soil properties should be set.

.. nml:member:: read_from_dump

   :type: logical
   :default: F

   TRUE
      Populate variables associated with this namelist from the dump file. All other namelist members are ignored.

   FALSE
      Use the other namelist members to determine how to populate variables.


.. nml:member:: const_z

   :type: logical
   :default: F

   Switch indicating if soil properties are to be uniform with depth.

   TRUE
       Soil characteristics do not vary with depth.

   FALSE
       Soil characteristics vary with depth.


.. nml:member:: file

   :type: character
   :default: None

   The file to read soil properties from.

   If :nml:mem:`use_file` is FALSE for every variable, this will not be used.

   This file name can use :doc:`variable name templating </input/file-name-templating>`.


.. nml:member:: nvars

   :type: integer
   :permitted: >= 0
   :default: 0

   The number of soil property variables that will be provided. At present, all variables are required for all runs.


.. nml:member:: var

   :type: character(nvars)
   :default: None

   List of soil variable names as recognised by JULES (see :ref:`list-of-soil-params`). Names are case sensitive.

   .. note:: For ASCII files, variable names must be in the order they appear in the file.


.. nml:member:: use_file

   :type: logical(nvars)
   :default: T

   For each JULES variable specified in :nml:mem:`var`, this indicates if it should be read from the specified file or whether a constant value is to be used.

   TRUE
      The variable will be read from the file.

   FALSE
      The variable will be set to a constant value everywhere using :nml:mem:`const_val` below.


.. nml:member:: var_name

   :type: character(nvars)
   :default: '' (empty string)

   For each JULES variable specified in :nml:mem:`var` where :nml:mem:`use_file` = TRUE, this is the name of the variable in the file containing the data.

   If the empty string (the default) is given for any variable, then the corresponding value from :nml:mem:`var` is used instead.

   This is not used for variables where :nml:mem:`use_file` = FALSE, but a placeholder must still be given in that case.

   .. note:: For ASCII files, this is not used - only the order in the file matters, as described above.


.. nml:member:: tpl_name

   :type: character(nvars)
   :default: None

   For each JULES variable specified in :nml:mem:`var`, this is the string to substitute into the file name in place of the variable name substitution string.

   If the file name does not use variable name templating, this is not used.


.. nml:member:: const_val

   :type: real(nvars)
   :default: None

   For each JULES variable specified in :nml:mem:`var` where :nml:mem:`use_file` = FALSE, this is a constant value that the variable will be set to at every point in every layer.

   This is not used for variables where :nml:mem:`use_file` = TRUE, but a placeholder must still be given in that case.


.. _list-of-soil-params:

List of soil parameters
~~~~~~~~~~~~~~~~~~~~~~~

If :nml:mem:`const_z` = FALSE, variables read from file must have a single levels dimension of size :nml:mem:`JULES_SOIL::sm_levels` called :nml:mem:`JULES_INPUT_GRID::soil_dim_name`.

If :nml:mem:`const_z` = TRUE, variables read from file must have no levels dimensions.

In both cases, the variables must have no time dimension. Some examples of the setup of soil properties can be found in the ``examples`` directory.

.. tabularcolumns:: |p{2.5cm}|L|

+----------------------------+-----------------------------------------------------------------------------------------------------------+
| Name                       | Description                                                                                               |
+============================+===========================================================================================================+
| ``albsoil``                | Soil albedo. A single (averaged) waveband is used.                                                        |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``b``                      | Exponent in soil hydraulic characteristics.                                                               |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``hcap``                   | Dry heat capacity (J m\ :sup:`-3` K\ :sup:`-1`).                                                          |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``hcon``                   | Dry thermal conductivity (W m\ :sup:`-1` K\ :sup:`-1`).                                                   |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``satcon``                 | Hydraulic conductivity at saturation (kg m\ :sup:`-2` s\ :sup:`-1`).                                      |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``sathh``                  | If :nml:mem:`JULES_SOIL::l_vg_soil` = TRUE (using van Genuchten model),                                   |
|                            | sathh = 1 / |alpha| (m\ :sup:`-1`), where |alpha| is a parameter of the van Genuchten model.              |
|                            |                                                                                                           |
|                            | .. |alpha| unicode:: &#x03B1; .. alpha                                                                    |
|                            |                                                                                                           |
|                            | If :nml:mem:`JULES_SOIL::l_vg_soil` = FALSE (using Brooks and Corey model), ``sathh`` is                  |
|                            | the absolute value of the soil matric suction at saturation (m). The suction at saturation is generally   |
|                            | less than zero, but JULES uses the absolute value.                                                        |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``sm_crit``                | Volumetric soil moisture content at the critical point (m\ :sup:`3` water per m\ :sup:`3` soil).          |
|                            | The point at which soil moisture stress starts to restrict transpiration is a function of ``sm_crit``,    | 
|                            | ``sm_sat`` and the pft-dependent parameter :nml:mem:`JULES_PFTPARM::fsmc_p0_io` .                         |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``sm_sat``                 | Volumetric soil moisture content at saturation (m\ :sup:`3` water per m\ :sup:`3` soil).                  |
|                            |                                                                                                           |
|                            | .. note::                                                                                                 |
|                            |    This field is used to distinguish between soil points and land ice points.                             |
|                            |                                                                                                           |
|                            |    ``sm_sat > 0`` indicates a soil point.                                                                 |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``sm_wilt``                | Volumetric soil moisture content at the wilting point (m\ :sup:`3` water per m\ :sup:`3` soil). The       |
|                            | wilting point is that at which soil moisture stress completely prevents transpiration.                    |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``clay``                   | Soil clay content (g clay per g soil). This is only used when l_triffid is TRUE where                     |
|                            | soil clay content is used in the soil carbon decomposition model.                                         |
|                            |                                                                                                           |
|                            | .. note::                                                                                                 |
|                            |    In order to make it backwards compatible, if it is not available it is set to 0.0 in the code.         |
|                            |                                                                                                           |
|                            |    However, this is wrong - if it is not available it should be set to 0.23                               |
+----------------------------+-----------------------------------------------------------------------------------------------------------+



``JULES_TOP`` namelist members
------------------------------

.. nml:namelist :: JULES_TOP

This namelist reads spatially varying parameter values for the TOPMODEL-type parameterisation of runoff. The values are only used if :nml:mem:`JULES_HYDROLOGY::l_top` = TRUE. The description below is very brief. For further details, see the references under :nml:mem:`JULES_HYDROLOGY::l_top`.


.. nml:member:: read_from_dump

   :type: logical
   :default: F

   TRUE
      Populate variables associated with this namelist from the dump file. All other namelist members are ignored.

   FALSE
      Use the other namelist members to determine how to populate variables.


.. nml:member:: file
   
   :type: character
   :default: None
   
   The file to read TOPMODEL properties from.
   
   If :nml:mem:`use_file` is FALSE for every variable, this will not be used.
  
   This file name can use :doc:`variable name templating </input/file-name-templating>`.
   
    
.. nml:member:: nvars
   
   :type: integer
   :permitted: >= 0
   :default: 0
   
   The number of TOPMODEL property variables that will be provided. At present, all variables are required for runs using TOPMODEL.
   
   
.. nml:member:: var
  
   :type: character(nvars)
   :default: None
   
   List of TOPMODEL variable names as recognised by JULES (see :ref:`list-of-topmodel-params`). Names are case sensitive.
   
   .. note:: For ASCII files, variable names must be in the order they appear in the file.
   
   
.. nml:member:: use_file
   
   :type: logical(nvars)
   :default: T
   
   For each JULES variable specified in :nml:mem:`var`, this indicates if it should be read from the specified file or whether a constant value is to be used.
    
   TRUE
       The variable will be read from the file.
   
   FALSE
       The variable will be set to a constant value everywhere using :nml:mem:`const_val` below.
   
   
.. nml:member:: var_name
   
   :type: character(nvars)
   :default: '' (empty string)
  
   For each JULES variable specified in :nml:mem:`var` where :nml:mem:`use_file` = TRUE, this is the name of the variable in the file containing the data.

   If the empty string (the default) is given for any variable, then the corresponding value from :nml:mem:`var` is used instead.
    
   This is not used for variables where :nml:mem:`use_file` = FALSE, but a placeholder must still be given in that case.
   
   .. note:: For ASCII files, this is not used - only the order in the file matters, as described above.
   
   
.. nml:member:: tpl_name
   
   :type: character(nvars)
   :default: None
   
   For each JULES variable specified in :nml:mem:`var`, this is the string to substitute into the file name in place of the variable name substitution string.
   
   If the file name does not use variable name templating, this is not used.
   
   
.. nml:member:: const_val
   
   :type: real(nvars)
   :default: None
   
   For each JULES variable specified in :nml:mem:`var` where :nml:mem:`use_file` = FALSE, this is a constant value that the variable will be set to at every point in every layer.
   
   This is not used for variables where :nml:mem:`use_file` = TRUE, but a placeholder must still be given in that case.


.. _list-of-topmodel-params:

List of TOPMODEL parameters
~~~~~~~~~~~~~~~~~~~~~~~~~~~

All of the TOPMODEL variables listed below are expected to have no levels dimensions and no time dimension.

.. tabularcolumns:: |p{2.5cm}|L|

+----------------------------+-----------------------------------------------------------------------------------------------------------+
| Name                       | Description                                                                                               |
+============================+===========================================================================================================+
| ``fexp``                   | Decay factor describing how the saturated hydraulic conductivity decreases with depth below the standard  |
|                            | soil column (m\ :sup:`-1`).                                                                               |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``ti_mean``                | Mean value of the topographic index in each gridbox.                                                      |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``ti_sig``                 | Standard deviation of the topographic index in each gridbox.                                              |
+----------------------------+-----------------------------------------------------------------------------------------------------------+



``JULES_AGRIC`` namelist members
--------------------------------

.. nml:namelist:: JULES_AGRIC

If the TRIFFID vegetation model is used, the fractional area of agricultural land in each gridbox is specified using this namelist. Otherwise, the values in this namelist are not used.


.. nml:member:: read_from_dump

   :type: logical
   :default: F

   TRUE
      Populate variables associated with this namelist from the dump file. All other namelist members are ignored.

   FALSE
      Use the other namelist members to determine how to populate variables.


.. nml:member:: zero_agric

   :type: logical
   :default: T

   Switch used to simplify the initialisation of agricultural fraction.

   TRUE
       Set agricultural fraction at all points to zero.

   FALSE
       Set agricultural fraction using specified data.


.. nml:group:: Used if :nml:mem:`zero_agric` = FALSE and the input grid consists of a single location

   .. nml:member:: frac_agr
   
      :type: real
      :default: None
   
      The agricultural fraction for the single location.


.. nml:group:: Used if :nml:mem:`zero_agric` = FALSE and the input grid consists of more than one location

   .. nml:member:: file
   
      :type: character
      :default: None
   
      The name of the file to read agricultural fraction data from.
   
   
   .. nml:member:: agric_name
   
      :type: character
      :default: 'frac_agr'
   
      The name of the variable containing the agricultural fraction data.
   
      In the file, the variable must have no levels dimensions and no time dimension.
      

.. nml:member:: zero_past

   :type: logical
   :default: T

   Switch used to simplify the initialisation of pasture fraction. Pasture fraction can only be used if :nml:mem:`JULES_VEGETATION::l_trif_crop` is TRUE.

   TRUE
       Set pasture fraction at all points to zero.

   FALSE
       Set pasture fraction using specified data.


.. nml:group:: Used if :nml:mem:`zero_past` = FALSE and the input grid consists of a single location

   .. nml:member:: frac_past
   
      :type: real
      :default: None
   
      The pasture fraction for the single location.


.. nml:group:: Used if :nml:mem:`zero_past` = FALSE and the input grid consists of more than one location

   .. nml:member:: file_past
   
      :type: character
      :default: None
   
      The name of the file to read pasture fraction data from.
   
   
   .. nml:member:: pasture_name
   
      :type: character
      :default: 'frac_past'
   
      The name of the variable containing the pasture fraction data.
   
      In the file, the variable must have no levels dimensions and no time dimension.
       

``JULES_CROP_PROPS`` namelist members
-------------------------------------

.. nml:namelist:: JULES_CROP_PROPS


.. nml:member:: read_from_dump

   :type: logical
   :default: F

   TRUE
      Populate variables associated with this namelist from the dump file. All other namelist members are ignored.

   FALSE
      Use the other namelist members to determine how to populate variables.


.. nml:member:: file

   :type: character
   :default: None

   The file from which crop properties are read.

   If :nml:mem:`use_file` is FALSE for every variable, this will not be used.

   This file name can use :doc:`variable name templating </input/file-name-templating>`.


.. nml:member:: nvars

   :type: integer
   :permitted: >= 0
   :default: 0

   The number of crop property variables that will be provided.


.. nml:member:: var

   :type: character(nvars)
   :default: None

   List of variable names for spatially-varying crop properties as recognised by JULES (see :ref:`list-of-spatially-varying-crop-properties`). Names are case sensitive.

   .. note:: For ASCII files, variable names must be in the order they appear in the file.


.. nml:member:: use_file

   :type: logical(nvars)
   :default: T

   For each JULES variable specified in :nml:mem:`var`, this indicates if it should be read from the specified file or whether a constant value is to be used.

   TRUE
      The variable will be read from the file.

   FALSE
      The variable will be set to a constant value everywhere using :nml:mem:`const_val` below.


.. nml:member:: var_name

   :type: character(nvars)
   :default: '' (empty string)

   For each JULES variable specified in :nml:mem:`var` where :nml:mem:`use_file` = TRUE, this is the name of the variable in the file containing the data.

   If the empty string (the default) is given for any variable, then the corresponding value from :nml:mem:`var` is used instead.

   This is not used for variables where :nml:mem:`use_file` = FALSE, but a placeholder must still be given in that case.

   .. note:: For ASCII files, this is not used - only the order in the file matters, as described above.


.. nml:member:: tpl_name

   :type: character(nvars)
   :default: None

   For each JULES variable specified in :nml:mem:`var`, this is the string to substitute into the file name in place of the variable name substitution string.

   If the file name does not use variable name templating, this is not used.


.. nml:member:: const_val

   :type: real(nvars)
   :default: None

   For each JULES variable specified in :nml:mem:`var` where :nml:mem:`use_file` = FALSE, this is a constant value that the variable will be set to at every point in every layer.

   This is not used for variables where :nml:mem:`use_file` = TRUE, but a placeholder must still be given in that case.


.. _list-of-spatially-varying-crop-properties:

List of spatially-varying crop properties
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

All of the crop variables listed below are expected to have a single levels dimension of size :nml:mem:`JULES_SURFACE_TYPES::ncpft` called :nml:mem:`JULES_INPUT_GRID::cpft_dim_name`.

.. tabularcolumns:: |p{2.5cm}|L|

+----------------------------+-----------------------------------------------------------------------------------------------------------+
| Name                       | Description                                                                                               |
+============================+===========================================================================================================+
| ``cropsowdate``            | The sowing date for each crop.                                                                            |
|                            |                                                                                                           |
|                            | The sowing date should be a real number, with ``0 < nint(sowing_date) < number of days in year``.         |
|                            | For example, for a 365 day year, sow_date = 1.0 is Jan 1st and sow_date = 365.0 is Dec 31st.              |
|                            |                                                                                                           |
|                            | If a crop requires two sowing dates per year, it should be treated as two separate crops with identical   |
|                            | parameters apart from the sowing date.                                                                    |
|                            |                                                                                                           |
|                            |                                                                                                           |
|                            | .. note:: Only required if :nml:mem:`JULES_VEGETATION::l_prescsow` = TRUE.                                |                            
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``cropttveg``              | Thermal time between emergence and flowering (degree days).                                               |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``cropttrep``              | Thermal time between flowering and maturity/harvest (degree days).                                        |
+----------------------------+-----------------------------------------------------------------------------------------------------------+

.. seealso::
   References:
  
   * Osborne et al, `JULES-crop: a parametrisation of crops in the Joint UK Land Environment Simulator <http://www.geosci-model-dev.net/8/1139/2015/gmd-8-1139-2015.html>`_, Geosci. Model Dev., 8, 1139-1155, 2015.

``JULES_IRRIG`` namelist members
--------------------------------

.. nml:namelist:: JULES_IRRIG


.. nml:member:: read_from_dump

   :type: logical
   :default: F

   TRUE
      Populate variables associated with this namelist from the dump file. All other namelist members are ignored.

   FALSE
      Use the other namelist members to determine how to populate variables.


.. nml:member:: frac_irrig_all_tiles

   :type: logical 
   :default: T

   If T, then irrigation fraction is applied to all tiles, and F, it is applied only to the tiles specified in :nml:mem:`irrigtiles`. 


.. nml:member:: nirrtile

   :type: integer
   :default: None

   The number of tile types to be irrigated. Only used if :nml:mem:`frac_irrig_all_tiles` = F. 


.. nml:member:: irrigtiles

   :type: integer(nirrtile)
   :default: None

   Indices of the tiles to be irrigated. Only used if :nml:mem:`frac_irrig_all_tiles` = F.


.. nml:member:: read_file 

   :type: logical
   :default: T
    
   Indicates if irrigated fraction is to be read from file.

   TRUE
       Irrigated fraction is read from the file specified in :nml:mem:`file`.

   FALSE
       Irrigated fraction is set to the constant value specified in :nml:mem:`const_frac_irr`.


.. nml:member:: file

   :type: character
   :default: None

   The file from which irrigation fractions are read, including path. 


.. nml:member:: var_name 

   :type: character
   :default: 'frac_irig'

   The name of the variable containing the irrigated fraction data.

   .. note::
       This is only used for NetCDF files.
       For ASCII files, the irrigated fraction data is expected to be the first (ideally only) variable in the file.

   In the file, the variable must have no levels or time dimensions.


.. nml:member:: const_frac_irr

   :type: real
   :default: none   

   The constant irrigated fraction to be applied to all grid points.


``JULES_RIVERS_PROPS`` namelist members
---------------------------------------

.. nml:namelist:: JULES_RIVERS_PROPS

This namelist specifies how spatially varying river routing properties should be set.

.. note:: ``read_from_dump`` is not currently implemented for this namelist, although initial condition variables can be read from a dump file if :nml:mem:`JULES_RIVERS::rivers_type` is ``rfm`` or ``trip`` (see :nml:lst:`JULES_INITIAL`).

.. note::
   The river routing code in JULES is still in development. Users should ensure that results are as expected, and provide feedback where deficiencies are identified.

.. note::
   The grid on which the river routing will run, and on which river routing ancillaries must be provided, could potentially differ from the input/model grid specified in :doc:`model_grid.nml`.
   
   For the duration of this document, the following nomenclature will be used:
   
   *  **Model input grid** - The full JULES input grid specified in :nml:lst:`JULES_INPUT_GRID`
   *  **River routing grid** - The grid on which the river routing will run, and on which river routing ancillaries will be provided
   
   Currently, information about the river routing grid and its relationship to the model input grid is specified in :nml:lst:`JULES_RIVERS_PROPS`.

   While the model input can be defined on a 1D grid, the river routing grid must be 2D, as defined through the x and y dimensions of the rivers ancillary file. See :nml:mem:`x_dim_name` and :nml:mem:`y_dim_name` for further details. If a non-regular model and river routing grid is used, both the x and y dimensions and corresponding latitude and longitude values must be specified for each grid point. 

   For some applications, the model input and river routing grids may not be coincident. Note that functionality only currently exists to regrid between regular (but non-identical) model input and river routing grids. If a non-regular model input grid is specified, it is assumed that the model input and river routing grids will be coincident.

   

.. nml:group:: Members used to define the river routing grid            

   .. nml:member:: rivers_reglatlon

      :type: logical
      :default: T

      Flag indicating if the river routing grid is regular in latitude and longitude.

      TRUE
         River routing grid is regular in latitude and longitude. 

      FALSE
         River routing grid is not regular in latitude and longitude (e.g. grid defined relative to a rotated pole, National Grid, etc). Only :nml:mem:`JULES_RIVERS::rivers_type` = ``rfm`` should be used in this case. Note that the model input and river routing grids must be coincident in this case and :nml:mem:`rivers_regrid` must also be set to false.
                              

   .. nml:member:: x_dim_name
   
      :type: character
      :default: None
   
      The name of the x dimension for the river routing grid. 

      .. note:: For ASCII files, this can be anything. For NetCDF files, it  should the name of the dimension in input file(s).
      .. warning:: Values for the x dimension of the river routing grid will need to be read from the input file to define the grid, so it is assumed that the file contains a variable of the same name. If a non-regular river routing grid is used, a 2D longitude field will also be needed to define the x-location of each grid point, read in via the longitude_2d ancillary field.
   
   
   .. nml:member:: y_dim_name
   
      :type: character
      :default: None
   
      The name of the y dimension for the river routing grid.
   
      .. note:: For ASCII files, this can be anything. For NetCDF files, it should the name of the dimension in input file(s).
      .. warning:: Values for the y dimension of the river routing grid will need to be read from the input file to define the grid, so it is assumed that the file contains a variable of the same name. If a non-regular river routing grid is used, a 2D latitude field will also be needed to define the y-location of each grid point, read in via the latitude_2d ancillary field.
   
   .. nml:member:: nx
   
      :type: integer
      :permitted: >= 1
      :default: None
   
      The size of the x dimension of the river routing grid.                
                         
   .. nml:member:: ny
   
      :type: integer
      :permitted: >= 1
      :default: None
   
      The size of the y dimension of the river routing grid.
         
         
.. nml:group:: Members used to define the relationship between the model input grid and the river routing grid
         
   .. nml:member:: rivers_regrid

      :type: logical
      :default: T

      Flag indicating if the model input and river routing grids are identical, i.e. whether regridding of variables to and from the river routing grid is required. Note this is only currently possible if :nml:mem:`rivers_reglatlon` is TRUE.

      TRUE
         River routing and model input grids differ and regridding is required.

      FALSE
         River routing and model input grids are identical.

   .. warning::
      Currently, regridding between model input and river routing grids must only be used with regular lat/lon model input and river routing grids.
      
      *  If a 1D model input grid is specified in :nml:lst:`JULES_INPUT_GRID`, it must be possible to define a 2D regular lat/lon grid containing all the points in the model input grid. This is done using the variables below.
      
      An example with the GSWP2 (land points only) forcing data is given below.


   .. nml:group:: Only used when :nml:mem:`JULES_INPUT_GRID::grid_is_1d <JULES_INPUT_GRID::grid_is_1d>` = TRUE or for a parallel standalone run.

      .. nml:member:: nx_grid
   
         :type: integer
         :permitted: >= 1
         :default: :nml:mem:`JULES_RIVERS_PROPS::nx <JULES_RIVERS_PROPS::nx>`
   
         The size of the x dimension of the 2D regular lat/lon grid containing the model input grid.
                                     

      .. nml:member:: ny_grid
   
         :type: integer
         :permitted: >= 1
         :default: :nml:mem:`JULES_RIVERS_PROPS::ny <JULES_RIVERS_PROPS::ny>`
   
         The size of the y dimension of the 2D regular lat/lon grid containing the model input grid.            


      .. nml:member:: reg_lat1
   
         :type: real
         :default: Latitude of lower-left corner of river routing grid
   
         The latitude of the lower-left corner of the 2D regular lat-lon grid containing the model input grid.


      .. nml:member:: reg_lon1
   
         :type: real
         :default: Longitude of lower-left corner of river routing grid
   
         The longitude of the lower-left corner of the 2D regular lat/lon grid containing the model input grid.   


      .. nml:member:: reg_dlat
    
         :type: real
         :default: Latitude spacing of river routing grid
   
         The latitude spacing of the 2D regular lat/lon grid containing the model input grid.                       
              

      .. nml:member:: reg_dlon
   
         :type: real
         :default: Longitude spacing of river routing grid
   
         The longitude spacing of the 2D regular lat/lon grid containing the model input grid.                     


.. nml:group:: Only used when :nml:mem:`JULES_RIVERS_PROPS::rivers_reglatlon` = FALSE

   .. nml:member:: rivers_dx
   
      :type: real
      :permitted: > 0
      :default: 0
   
      The constant size of the rivers grid (in m) if non-regular in latitude/longitude (e.g. if defined in National Grid coordinates). 


.. nml:group:: Members used to determine how river routing variables are set

   .. nml:member:: file

      :type: character
      :default: None

      The file to read river routing properties from.

      If :nml:mem:`use_file` is FALSE for every variable, this will not be used.

      This file name can use :doc:`variable name templating </input/file-name-templating>`.


   .. nml:member:: nvars

      :type: integer
      :permitted: >= 0
      :default: 0

      The number of river routing property variables that will be provided (see :ref:`list-of-rivers-params`). 
      
      *  For RFM, at least direction is currently required
      *  For TRIP, at least direction and sequence are required
      


   .. nml:member:: var

      :type: character(nvars)
      :default: None

      List of river routing variable names as recognised by JULES (see :ref:`list-of-rivers-params`). Names are case sensitive.

      .. note:: For ASCII files, variable names must be in the order they appear in the file.


   .. nml:member:: use_file

      :type: logical(nvars)
      :default: T

      For each JULES variable specified in :nml:mem:`var`, this indicates if it should be read from the specified file or whether a constant value is to be used.

      TRUE
         The variable will be read from the file.

      FALSE
         The variable will be set to a constant value everywhere using :nml:mem:`const_val` below.
 

   .. nml:member:: var_name

      :type: character(nvars)
      :default: '' (empty string)

      For each JULES variable specified in :nml:mem:`var` where :nml:mem:`use_file` = TRUE, this is the name of the variable in the file containing the data.

      If the empty string (the default) is given for any variable, then the corresponding value from :nml:mem:`var` is used instead.

      This is not used for variables where :nml:mem:`use_file` = FALSE, but a placeholder must still be given in that case.

      .. note:: For ASCII files, this is not used - only the order in the file matters, as described above.


   .. nml:member:: tpl_name

      :type: character(nvars)
      :default: None

      For each JULES variable specified in :nml:mem:`var`, this is the string to substitute into the file name in place of the variable name substitution string.

      If the file name does not use variable name templating, this is not used.


   .. nml:member:: const_val

      :type: real(nvars)
      :default: None

      For each JULES variable specified in :nml:mem:`var` where :nml:mem:`use_file` = FALSE, this is a constant value that the variable will be set to at every point.

      This is not used for variables where :nml:mem:`use_file` = TRUE, but a placeholder must still be given in that case.


Example
~~~~~~~

The following gives an example of how you would set up the namelists to use routing with the GSWP2 forcing data.

The model input grid is the GSWP2 grid, i.e. a land-points-only, 1D grid where points lie on a 1\ |deg| x 1\ |deg| grid. The river routing grid is a 2D 1\ |deg| x 1\ |deg| grid.

Since both grids are 1\ |deg| x 1\ |deg|, we define the 2D regular lat-lon grid containing the model input grid to be the river routing grid, which means we don't need any regridding of variables. ::

    &JULES_INPUT_GRID
      grid_is_1d    = T,
      npoints       = 15238,
      grid_dim_name = "land"
      # ...
    /
    
    # ...
    
    &JULES_RIVERS_PROPS
      # Define the river routing grid to be a 2D regular lat-lon grid
      rivers_reglatlon = T,
      x_dim_name = "longitude",
      nx         = 360,
      y_dim_name = "latitude",
      ny         = 180,
      
      # Define the 2D regular lat-lon grid containing the model input grid to be a 2D 1\ |deg| x 1\ |deg| grid
      nx_grid  = 360,
      ny_grid  = 180,
      reg_lat1 = -89.5,
      reg_lon1 = -179.5,
      reg_dlat = 1.0,
      reg_dlon = 1.0,
      
      # No regridding required since the river routing grid is the same as the 2D regular lat-lon grid containing the model input grid
      rivers_regrid = F
    /

    
.. |deg| unicode:: U+00B0


.. _list-of-rivers-params:

List of rivers properties
~~~~~~~~~~~~~~~~~~~~~~~~~

The following table summarises river routing grid properties required to run RFM or TRIP river routing algorithms, specified from an ancillary file if :nml:mem:`JULES_RIVERS_PROPS::use_file` = TRUE.

.. tabularcolumns:: |p{2.5cm}|L|

+----------------------------+-----------------------------------------------------------------------------------------------------------+
| Name                       | Description                                                                                               |
+============================+===========================================================================================================+
| ``area``                   | Drainage area (in number of grid boxes) draining into a given grid box.                                   |
|                            |                                                                                                           |
|                            | This does not include the grid point itself, and so an extra point to account for the grid point itself   |
|                            | must be added where catchment area calculations are required.                                             |
|                            |                                                                                                           |
|                            | This is used if :nml:mem:`JULES_RIVERS::rivers_type` = ``rfm`` to define river, land and                  |
|                            | sea points using the :nml:mem:`JULES_RIVERS::a_thresh` parameter.                                         |
|                            |                                                                                                           |
|                            | If not available, all points with a valid direction value are set to 2 by default (i.e. river points if a |
|                            | global_run, land points if high-res).                                                                     |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``direction``              | Flow direction for each river routing grid box, defining the next grid box into which surface or          |
|                            | sub-surface water will be routed.                                                                         |
|                            |                                                                                                           |
|                            | This is specified as an integer according to ``[1 = N, 2 = NE, 3 = E, 4 = SE, 5 = S, 6 = SW, 7 = W,       |
|                            | 8 = NW]``.                                                                                                |
|                            |                                                                                                           |
|                            | This numbering system is based on the TRIP implementation, and may not be standard. Users should          |
|                            | take care to ensure that the input ancillary is defined as required.                                      |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``sequence``               | River routing network pathway number.                                                                     |
|                            |                                                                                                           |
|                            | Used by TRIP river routing only (i.e. :nml:mem:`JULES_RIVERS::rivers_type` = ``trip``).                   |
|                            | See Oki et al. (1999) for details.                                                                        |
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``latitude_2d``            | If :nml:mem:`rivers_reglatlon` = FALSE, the unique 2D location of each river grid point must be specified.|
+----------------------------+-----------------------------------------------------------------------------------------------------------+
| ``longitude_2d``           | If :nml:mem:`rivers_reglatlon` = FALSE, the unique 2D location of each river grid point must be specified.|
+----------------------------+-----------------------------------------------------------------------------------------------------------+

.. seealso::
      References:
   
      * Bell, V.A. et al. (2007) Development of a high resolution grid-based river flow model for use with regional climate model output. Hydrology and Earth System Sciences. 11 532-549
      * Oki, T., et al (1999) Assessment of annual runoff from land surface models using Total Runoff Integrating Pathways (TRIP). Journal of the Meteorological Society of Japan. 77 235-255



``JULES_CO2`` namelist members
------------------------------

.. nml:namelist:: JULES_CO2

.. nml:member:: read_from_dump

   :type: logical
   :default: F

   TRUE
      Populate variables associated with this namelist from the dump file. All other namelist members are ignored.

   FALSE
      Use the other namelist members to determine how to populate variables.


.. nml:member:: co2_mmr

   :type: real
   :default: 5.241e-4

   Concentration of atmospheric CO2, expressed as a mass mixing ratio.
